<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2003-2018 Broad Institute, Inc., Massachusetts Institute of Technology, and Regents 
    of the University of California. All rights reserved. -->
<project name="GSEA" default="build" basedir=".">
    <taskdef resource="proguard/ant/task.properties" classpath="lib_build/proguard.jar" />

    <!-- GLOBAL VARS -->
    <property name="dist.dir" value="${basedir}/dist" />
    <property name="proguard_opt_hist.dir" value="${basedir}/proguard_opt_log" />

    <target name="-init">
        <!-- Create the time stamp -->
        <tstamp>
            <format property="TODAY" pattern="MMMdd_yyyy_HHmmss" />
            <format property="time.stamp" pattern="yyyy-MM-dd_HHmmss" />
        </tstamp>
    </target>

    <target name="clean">
        <delete dir="${dist.dir}" failonerror="false" />
        <!-- Leave behind the proguard_opt_hist dir as the reports may be useful for comparison. -->
    </target>

    <target name="update-build-props" depends="-init">
        <!-- Increment the build properties. The application reads these from build.properties for display 
            in Help->About -->
        <propertyfile file="src/main/java/edu/mit/broad/genome/resources/build.properties">
            <entry key="build.number" type="int" operation="+" pattern="0000" default="0001" />
            <entry key="build.timestamp" type="date" operation="=" value="${time.stamp}"
                pattern="EEE, d MMM yyyy HH:mm:ss Z" />
        </propertyfile>
        <property file="src/main/java/edu/mit/broad/genome/resources/build.properties" />
        <property name="MINIMAL_JAR" value="gsea-minimal-${build.version}.jar" />
        <property name="ALL_DEPS_JAR" value="gsea-all_deps-${build.version}.jar" />
        <property name="RELEASE_JAR" value="gsea-${build.version}.jar" />
    </target>

    <target name="compile" depends="-init"> <!-- temporarily skipping 'update-build-props' to avoid build # updates -->
        <property name="MINIMAL_JAR" value="gsea-minimal-DEV.jar" />
        <property name="ALL_DEPS_JAR" value="gsea-all_deps-DEV.jar" />
        <property name="RELEASE_JAR" value="gsea-DEV.jar" />
        <mkdir dir="${dist.dir}/classes" />
        <javac target="1.8" source="1.8" debug="true" defaultexcludes="true" deprecation="false"
            destdir="${dist.dir}/classes" optimize="false" memoryMaximumSize="1024M"
            fork="true" includes="**" failonerror="true" includeantruntime="false">
            <classpath>
                <fileset dir="lib" includes="*.jar" />
                <fileset dir="modules" includes="*.jar" />
            </classpath>
            <src path="src/main/java" />
            <src path="src/main/java8" />
        </javac>
    </target>

    <target name="copy-resources" depends="compile" description="Copies resources into build tree">
        <mkdir dir="${dist.dir}/classes/edu/mit/broad/geneome/resources" />
        <copy todir="${dist.dir}/classes/edu/mit/broad/genome/resources">
            <fileset dir="src/main/java/edu/mit/broad/genome/resources" />
        </copy>
        <copy file="src/main/java/log4j2.xml" todir="${dist.dir}/classes" />
    </target>

    <!-- Restructure one-jar and the build task: ProGuard doesn't need an all-in-one full jar to do its
         task, so just build a minimal jar and optimize with that + other jars as input.
     -->
    <target name="one-jar" depends="-init, clean, compile, copy-resources"
        description="Builds minimal (GSEA-only) JAR and single (unoptimized) full JAR">

        <jar basedir="${dist.dir}/classes" defaultexcludes="true" jarfile="${dist.dir}/${MINIMAL_JAR}" />

        <jar destfile="${dist.dir}/tmp.jar">
            <zipgroupfileset dir="lib">
                <include name="*.jar" />
                <exclude name="META-INF/**" />
            </zipgroupfileset>
            <zipgroupfileset dir="modules">
                <include name="*.jar" />
                <exclude name="META-INF/**" />
            </zipgroupfileset>

            <zipgroupfileset dir="${dist.dir}" includes="${MINIMAL_JAR}" />
        </jar>

        <jar destfile="${dist.dir}/${ALL_DEPS_JAR}">
            <zipfileset src="${dist.dir}/tmp.jar" excludes="META-INF/**, README.txt, COPYING.txt">
            </zipfileset>
            <fileset file="LICENSE.txt" />
            <fileset file="LICENSE-3RD-PARTY.txt" />
            <fileset file="README.md" />
            <manifest>
                <attribute name="Main-Class" value="xapps.gsea.GSEA" />
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="GSEA-Build-Date" value="${TODAY}" />
                <attribute name="Permissions" value="all-permissions" />
                <attribute name="Application-Name" value="GSEA" />
                <attribute name="Codebase"
                    value="http://*.broadinstitute.org/gsea/software https://*.broadinstitute.org/gsea/software http://*.broadinstitute.org:8080/gsea/software https://*.broadinstitute.org:8080/gsea/software http://*.gsea-msigdb.org/gsea/software https://*.gsea-msigdb.org/gsea/software http://*.msigdb.org/gsea/software https://*.msigdb.org/gsea/software" />
            </manifest>
        </jar>

        <!-- clean up tmp.jar file -->
        <delete file="${dist.dir}/tmp.jar" failonerror="false" />
    </target>

    <target name="build" depends="one-jar"
        description="Optimize JAR by removing unused classes and resources">
        <mkdir dir="${proguard_opt_hist.dir}" />
        <proguard printusage="${proguard_opt_hist.dir}/proguard_opt_log_${time.stamp}.txt">
            <injar path="${dist.dir}/${ALL_DEPS_JAR}" />
            <outjar path="${dist.dir}/${RELEASE_JAR}" />
            <libraryjar path="${java.home}/lib/rt.jar" />
            <libraryjar path="${java.home}/lib/charsets.jar" />
            <libraryjar path="${java.home}/lib/jce.jar" />
            <libraryjar path="${java.home}/lib/jfr.jar" />
            <libraryjar path="${java.home}/lib/jsse.jar" />
            <libraryjar path="${java.home}/lib/resources.jar" />
            <libraryjar path="${java.home}/lib/ext" jarfilter="*.jar" />
            <configuration file="lib_build/proguard_opt.cfg" />
        </proguard>
    </target>

    <target name="sign-jar" depends="build" description="Sign the optimized JAR">
        <!-- sign the jar. Note: (1) the current signing certificate expires in June, 2019 (2) the build must
            provide the keystore password as a Java command-line property, like "ant -Dstore-password=FOO..." -->
        <signjar jar="${dist.dir}/${RELEASE_JAR}" keystore="${keystore}" maxmemory="1024M"
            alias="codesign" tsaurl="http://timestamp.comodoca.com/rfc3161" storepass="${store-password}" />
    </target>

    <target name="build-release" depends="build, sign-jar"
        description="Builds and signs the JAR with an updated build date and number" />

</project>
